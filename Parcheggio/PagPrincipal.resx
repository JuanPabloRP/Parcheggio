<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAq4AAAICCAYAAAAOIU+TAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAADmVJREFUeF7t3dFtVOcahtHTRCqACqggVJA0kFQAFUAFVAAVUAFUYCrw9RGCKEqE
        oshECUmE0Jx8li3ZO2N7jz2g88Ba0nsR7NjD3aOff/b8ZwMAAAHCFQCABOEKAECCcAUAIOGTheuHo6PN
        ny9ebH57+nTz66NHm18ePNi8uX/fzMzMzAKbdpuGO3r8ePPH8+ebvw8PTyrv0/mo4TqhOn/JH+7e3fz3
        q6/MzMzM7DPaqzt3Nj99//3xweQcUn5sew/XedFT42LVzMzM7MvZy1u3Nm/u3du8f/XqpAr3b6/hOsE6
        L3rbX8bMzMzMvox9rIDdS7jOlYA1J6zzPXNHYgJ3jpTNzMzMrLPj9yk9fLj58ZtvrjysfHn79vH379ON
        w/XoyZOtL3Z2fGT8T6i+OzjYfHj79uT/AADgc/DX4eFxyM5d120tOJvI3dfp643CdY6Bt73ACdYpbLEK
        APBlmBPZiwJ2/nwf8XqtcJ03YE09b3th8xQBwQoA8GW6KGDnz+aE9iauFa4/fffd1hczVwIAAPiyvX/9
        +vgxWctenHuvNzl53Tlc50R1+SKOj3//eYEAAHBqro5u7cZrxutO4brtjVjzpABXAwAA2GZbvM6V0+tY
        Ha5TxsvHHjhpBQDgKtvidQ5Ed7U6XJdPEJiIFa0AAKyxfGP/de67rgrXeXfY2V80mz8DAIA15qlUy3+9
        nzdw7WJVuM6VgLO/ZD5UAAAAdvH7s2fnmnK2y1OprgzX+TjX5S9wRQAAgOtYXhmYJ1atdWW4Lu+2Om0F
        AOC63i0OReeu61wjWOPScJ0fcvYHz3zIAAAANzGPUz3bl2vfO3VpuC7vIcxdVwAAuInl47F+XvkmrUvD
        dfkpWbvcQQAAgG3m/VJnG3OuC6xxabguL8+6JgAAwD4sH4215s3/l4br8geuvTgLAACXmWe4nu3MNfdc
        LwzX5Ruz1h7hAgDAVZZXUtd8BOyF4frX4eG5H/bD11+ffAUAAG5mQvVsa655L9WF4br84IG57woAAPsw
        VwPOtuaazwoQrgAAfHLCFQCABOEKAECCcAUAIEG4AgCQIFwBAEgQrgAAJAhXAAAShCsAAAnCFQCABOEK
        AECCcAUAIEG4AgCQIFwBAEgQrgAAJAhXAAAShCsAAAnCFQCABOEKAECCcAUAIEG4AgCQIFwBAEgQrgAA
        JAhXAAAShCsAAAnCFQCABOEKAECCcAUAIEG4AgCQIFwBAEgQrgAAJAhXAAAShCsAAAnCFQCABOEKAECC
        cAUAIEG4AgCQIFwBAEgQrgAAJAhXAAAShCsAAAnCFQCABOEKAECCcAUAIEG4AgCQIFwBAEgQrgAAJAhX
        AAAShCsAAAnCFQCABOEKAECCcAUAIEG4AgCQIFwBAEgQrgAAJAhXAAAShCsAAAnCFQCABOEKAECCcAUA
        IEG4AgCQIFwBAEgQrgAAJAhXAAAShCsAAAnCFQCABOEKAECCcAUAIEG4AgCQIFwBAEgQrgAAJAhXAAAS
        hCsAAAnCFQCABOEKAECCcAUAIEG4AgCQIFwBAEgQrgAAJAhXAAAShCsAAAnCFQCABOEKAECCcAUAIEG4
        AgCQIFwBAEgQrgAAJAhXAAAShCsAAAnCFQCABOEKAECCcAUAIEG4AgCQIFwBAEgQrgAAJAhXAAAShCsA
        AAnCFQCABOEKAECCcAUAIEG4AgCQIFwBAEgQrgAAJAhXAAAShCsAAAnCFQCABOEKAECCcAUAIEG4AgCQ
        IFwBAEgQrgAAJAhXAAAShCsAAAnCFQCABOEKAECCcAUAIEG4AgCQIFwBAEgQrgAAJAhXAAAShCsAAAnC
        FQCABOEKAECCcAUAIEG4AgCQIFwBAEgQrgAAJAhXAAAShCsAAAnCFQCABOEKAECCcAUAIEG4AgCQIFwB
        AEgQrgAAJAhXAAAShCsAAAnCFQCABOEKAECCcAUAIEG4AgCQIFwBAEgQrgAAJAhXAAAShCsAAAnCFQCA
        BOEKAECCcAUAIEG4AgCQIFwBAEgQrgAAJAhXAAAShCsAAAnCFQCABOEKAECCcAUAIEG4AgCQIFwBAEgQ
        rgAAJAhXAAAShCsAAAnCFQCABOEKAECCcAUAIEG4AgCQIFwBAEgQrgAAJAhXAAAShCsAAAnCFQCABOEK
        AECCcAUAIEG4AgCQIFwBAEgQrgAAJAhXAAAShCsAAAnCFQCABOEKAECCcAUAIEG4AgCQIFwBAEgQrgAA
        JAhXAAAShCsAAAnCFQCABOEKAECCcAUAIEG4AgCQIFwBAEgQrgAAJAhXAAAShCsAAAnCFQCABOEKAECC
        cAUAIEG4AgCQIFwBAEgQrgAAJAhXAAAShCsAAAnCFQCABOEKAECCcAUAIEG4AgCQIFwBAEgQrgAAJAhX
        AAAShCsAAAnCFQCABOEKAECCcAUAIEG4AgCQIFwBAEgQrgAAJAhXAAAShCsAAAnCFQCABOEKAECCcAUA
        IEG4AgCQIFwBAEgQrgAAJAhXAAAShCsAAAnCFQCABOEKAECCcAUAIEG4AgCQIFwBAEgQrgAAJAhXAAAS
        hCsAAAnCFQCABOEKAECCcAUAIEG4AgCQIFwBAEgQrgAAJAhXAAAShCsAAAnCFQCABOEKAECCcAUAIEG4
        AgCQIFwBAEgQrgAAJAhXAAAShCsAAAnCFQCABOEKAECCcAUAIEG4AgCQIFwBAEgQrgAAJAhXAAAShCsA
        AAnCFQCABOEKAECCcAUAIEG4AgCQIFwBAEgQrgAAJAhXAAAShCsAAAnCFQCABOEKAECCcAUAIEG4AgCQ
        IFwBAEgQrgAAJAhXAAAShCsAAAnCFQCABOEKAECCcAUAIEG4AgCQIFwBAEgQrgAAJAhXAAAShCsAAAnC
        FQCABOEKAECCcAUAIEG4AgCQIFwBAEgQrgAAJAhXAAAShCsAAAnCFQCABOEKAECCcAUAIEG4AgCQIFwB
        AEgQrgAAJAhXAAAShCsAAAnCFQCABOEKAECCcAUAIEG4AgCQIFwBAEgQrgAAJAhXAAAShCsAAAnCFQCA
        BOEKAECCcAUAIEG4AgCQIFwBAEgQrgAAJAhXAAAShCsAAAnCFQCABOEKAECCcAUAIEG4AgCQIFwBAEgQ
        rgAAJAhXAAAShCsAAAnCFQCABOEKAECCcAUAIEG4AgCQIFwBAEgQrgAAJAhXAAAShCsAAAnCFQCABOEK
        AECCcAUAIEG4AgCQIFwBAEgQrgAAJAhXAAAShCsAAAnCFQCABOEKAECCcAUAIEG4AgCQIFwBAEgQrgAA
        JAhXAAAShCsAAAnCFQCABOEKAECCcAUAIEG4AgCQIFwBAEgQrgAAJAhXAAAShCsAAAnCFQCABOEKAECC
        cAUAIEG4AgCQIFwBAEgQrgAAJAhXAAAShCsAAAnCFQCABOEKAECCcAUAIEG4AgCQIFwBAEgQrgAAJAhX
        AAAShCsAAAnCFQCABOEKAECCcAUAIEG4AgCQIFwBAEgQrgAAJAhXAAAShCsAAAnCFQCABOEKAECCcAUA
        IEG4AgCQIFwBAEgQrgAAJAhXAAAShCsAAAnCFQCABOEKAECCcAUAIEG4AgCQIFwBAEgQrgAAJAhXAAAS
        hCsAAAnCFQCABOEKAECCcAUAIEG4AgCQIFwBAEgQrgAAJAhXAAAShCsAAAnCFQCABOEKAECCcAUAIEG4
        AgCQIFwBAEgQrgAAJAhXAAAShCsAAAnCFQCABOEKAECCcAUAIEG4AgCQIFwBAEgQrgAAJAhXAAAShCsA
        AAnCFQCABOEKAECCcAUAIEG4AgCQIFwBAEgQrgAAJAhXAAAShCsAAAnCFQCABOEKAECCcAUAIEG4AgCQ
        IFwBAEgQrgAAJAhXAAAShCsAAAnCFQCABOEKAECCcAUAIEG4AgCQIFwBAEgQrgAAJAhXAAAShCsAAAnC
        FQCABOEKAECCcAUAIEG4AgCQIFwBAEgQrgAAJAhXAAAShCsAAAnCFQCABOEKAECCcAUAIEG4AgCQIFwB
        AEjYa7i+f/363A97defOyVcAAOBmfn306Fxrzn9f5cJw/XB0dO6Hvbx9++QrAABwM788eHCuNY+ePDn5
        ysUuDNfx8tatcz9wTmEBAOCm5hrq2c58d3Bw8pWLXRquyx84dxEAAOCmlgek86/9V7k0XJd3D9ZcmgUA
        gMssHwKw9r1Ul4bru8UPnXuua2oYAAAu8ubevXONufZw9NJwHctj3DX3DwAA4CJzwnqdvrwyXJfXBTzP
        FQCA61o+v3WXR65eGa7L57nOnLoCAHAdy9PWNc9vPXVluI7l0wXmF7rrCgDALpb/kj9XUnd53OqqcN12
        6joPjQUAgDXev3r1r57c5bR1rArXsfx0g9nvz5+ffBUAALabaF1eEdjlbuup1eE6VwOWv3Aej/XX4eHJ
        dwAAwHnTkD/cvXuuIWfXOQBdHa5jInX5eKyJWfEKAMDSRdG66xWBUzuF6zh68uRfv3xOXl0bAADg1FwP
        2BatP3777cl37G7ncB3Ld4Sd7rr1DADA52M+0nV5xXQ2Ifvh7duT79rdtcJ1XBSv8yKdvgIAfHnmasDy
        41xPd9NoHdcO17Ht2sDp5tmvfwhYAIDP3t+Hh8eHmsv3Qp1uYvam0TpuFK5jnvG67Sj4dPO1ebF/Hhz4
        0AIAgM/ExOrR48f/+qCq5eagc19uHK5jgnTbc163bUp8/oKzN/fvm5mZmVlk02+XHVie3bwJa99PntpL
        uJ6a09f5S2178WZmZmb2+W/C9renT0/qcL/2Gq6nTgN2bZGbmZmZWXtzwvru4OCkBj+OjxKuZ7178WLz
        y8OHV95/MDMzM7POjt/HdP/+8T3Xfbzxao2PHq5Lcxo7MTv7/dmz46NkMzMzM/v/3nTb9Nu03KcK1aVP
        Hq4AAHAdwhUAgAThCgBAgnAFACBBuAIAkCBcAQBIEK4AAARsNv8DpGgCJHl7h64AAAAASUVORK5CYII=
</value>
  </data>
</root>